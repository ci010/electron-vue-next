name: Build

on:
  push:
    branches:
      - master
    paths:
      - 'build/**'
      - 'scripts/*'
      - 'src/**'
      - 'static/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    # - name: Get npm cache directory
    #   id: npm-cache
    #   run: |
    #     echo "::set-output name=dir::$(npm config get cache)"
    # - uses: actions/cache@v1
    #   with:
    #     path: ${{ steps.npm-cache.outputs.dir }}
    #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    #     restore-keys: |
    #       ${{ runner.os }}-node-
    - name: Install
      run: |
        npm ci --no-optional
    - name: Get Build Number
      id: vars
      uses: ./.github/actions/get-build-number
    - name: Build
      run: |
        npm run build:production
      env:
        BUILD_NUMBER: ${{ steps.vars.outputs.build_number }}
        FULL_RELEASE: ${{ startsWith(github.event.commits[0].message, 'chore(release)') }}
    # If you build nsis web, you should uncomment below
    # - name: Upload Web Build
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: build
    #     path: build/nsis-web/*.*
    - name: Upload Build
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build/*.*
    - name: Upload Windows Asar
      if: ${{ runner.os == 'Windows' && startsWith(github.event.commits[0].message, 'chore(release)') }}
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build/win-unpacked/resources/app.asar

  repare-release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !startsWith(github.event.commits[0].message, 'chore(release)') }}
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Fetch All
      run: git fetch --prune --unshallow
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install
      run: |
        npm ci --no-optional
      env:
        CI: true
    - name: Get Package Version
      uses: ./.github/actions/get-version
      id: package
    - name: Bump Version and Generate Changelog
      id: version
      uses: ci010/conventional-changelog-action@master
      with:
        github-token: ${{ secrets.github_token }}
        version: ${{ steps.package.outputs.version }}
        tag-prefix: 'v'
    - name: Update package.json and CHANGELOG.md
      uses: ./.github/actions/update-version-changelog
      with:
        version: ${{ steps.version.outputs.version }}
        changelog: ${{ steps.version.outputs.changelog }}
    - name: Create Pull Request
      if: ${{ steps.version.outputs.skipped == 'false' }}
      uses: peter-evans/create-pull-request@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: >-
          ${{ format('chore(release): {0}', steps.version.outputs.version) }}
        title: ${{ format('Prepare Release {0}', steps.version.outputs.version) }}
        body: ${{ steps.version.outputs.clean_changelog }}
        branch: prepare-release

  release:
    if: startsWith(github.event.commits[0].message, 'chore(release)')
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Fetch All
      run: git fetch --prune --unshallow
    # - uses: actions/cache@v1
    #   with:
    #     path: ~/.npm
    #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    #     restore-keys: |
    #       ${{ runner.os }}-node-
    - name: Install
      run: |
        npm ci --no-optional
    - name: Download Build
      uses: actions/download-artifact@v2
      with:
        name: build
        path: build
    - name: Get Package Version
      uses: ./.github/actions/get-version
      id: package
    - name: Prepare Release
      id: prepare_release
      uses: ci010/conventional-changelog-action@master
      with:
        github-token: ${{ secrets.github_token }}
        tag-prefix: 'v'
    - name: Draft Release
      id: create_release
      uses: voxelum/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ format('v{0}', steps.package.outputs.version) }}
        release_name: ${{ format('v{0}', steps.package.outputs.version) }}
        draft: false
        prerelease: false
        body: ${{ steps.prepare_release.outputs.clean_changelog }}
        asset_dir_path: ./build
